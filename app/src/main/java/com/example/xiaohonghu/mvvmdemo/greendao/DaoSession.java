package com.example.xiaohonghu.mvvmdemo.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.xiaohonghu.mvvmdemo.bean.EditorsBean;
import com.example.xiaohonghu.mvvmdemo.bean.NewsListBean;
import com.example.xiaohonghu.mvvmdemo.bean.StoriesBean;

import com.example.xiaohonghu.mvvmdemo.greendao.EditorsBeanDao;
import com.example.xiaohonghu.mvvmdemo.greendao.NewsListBeanDao;
import com.example.xiaohonghu.mvvmdemo.greendao.StoriesBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig editorsBeanDaoConfig;
    private final DaoConfig newsListBeanDaoConfig;
    private final DaoConfig storiesBeanDaoConfig;

    private final EditorsBeanDao editorsBeanDao;
    private final NewsListBeanDao newsListBeanDao;
    private final StoriesBeanDao storiesBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        editorsBeanDaoConfig = daoConfigMap.get(EditorsBeanDao.class).clone();
        editorsBeanDaoConfig.initIdentityScope(type);

        newsListBeanDaoConfig = daoConfigMap.get(NewsListBeanDao.class).clone();
        newsListBeanDaoConfig.initIdentityScope(type);

        storiesBeanDaoConfig = daoConfigMap.get(StoriesBeanDao.class).clone();
        storiesBeanDaoConfig.initIdentityScope(type);

        editorsBeanDao = new EditorsBeanDao(editorsBeanDaoConfig, this);
        newsListBeanDao = new NewsListBeanDao(newsListBeanDaoConfig, this);
        storiesBeanDao = new StoriesBeanDao(storiesBeanDaoConfig, this);

        registerDao(EditorsBean.class, editorsBeanDao);
        registerDao(NewsListBean.class, newsListBeanDao);
        registerDao(StoriesBean.class, storiesBeanDao);
    }
    
    public void clear() {
        editorsBeanDaoConfig.clearIdentityScope();
        newsListBeanDaoConfig.clearIdentityScope();
        storiesBeanDaoConfig.clearIdentityScope();
    }

    public EditorsBeanDao getEditorsBeanDao() {
        return editorsBeanDao;
    }

    public NewsListBeanDao getNewsListBeanDao() {
        return newsListBeanDao;
    }

    public StoriesBeanDao getStoriesBeanDao() {
        return storiesBeanDao;
    }

}
